name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{FRAMEWORK_PRINCIPAL}}
  user: {{FRAMEWORK_USER}}
pods:
  consul:
    count: {{NODE_COUNT}}
    placement: '{{{NODE_PLACEMENT}}}'
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    uris:
      - {{CONSUL_URI}}
      - {{BOOTSTRAP_URI}}
    tasks:
      node:
        goal: RUNNING
        ports:
          rpc:
            port: {{TASKCFG_ALL_PORT_SERVER}}
            env-key: PORT_RPC
          serf-lan:
            port: {{TASKCFG_ALL_PORT_SERF_LAN}}
            env-key: PORT_SERF_LAN
          {{#TASKCFG_ALL_PORT_SERF_WAN_ENABLED}}
          serf-wan:
            port: {{TASKCFG_ALL_PORT_SERF_WAN}}
            env-key: PORT_SERF_WAN
          {{/TASKCFG_ALL_PORT_SERF_WAN_ENABLED}}
          {{#TASKCFG_ALL_PORT_HTTP_ENABLED}}
          api:
            port: {{TASKCFG_ALL_PORT_HTTP}}
            env-key: PORT_HTTP
            advertise: true
            vip:
              port: {{TASKCFG_ALL_PORT_HTTP}}
          {{/TASKCFG_ALL_PORT_HTTP_ENABLED}}
          {{#TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
          api-tls:
            port: {{TASKCFG_ALL_PORT_HTTPS}}
            env-key: PORT_HTTPS
            advertise: true
            vip:
              port: {{TASKCFG_ALL_PORT_HTTPS}}
          {{/TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
          {{#TASKCFG_ALL_PORT_DNS_ENABLED}}
          dns:
            port: {{TASKCFG_ALL_PORT_DNS}}
            env-key: PORT_DNS
            advertise: true
            vip:
              port: {{TASKCFG_ALL_PORT_DNS}}
          {{/TASKCFG_ALL_PORT_DNS_ENABLED}}
          {{#TASKCFG_ALL_PORT_GRPC_ENABLED}}
          grpc:
            port: {{TASKCFG_ALL_PORT_GRPC}}
            env-key: PORT_GRPC
            advertise: true
            vip:
              port: {{TASKCFG_ALL_PORT_GRPC}}
          {{/TASKCFG_ALL_PORT_GRPC_ENABLED}}
        cmd: |
          chmod +x consul
          ./bootstrap
          ARGS="agent -server -config-file $MESOS_SANDBOX/consul.json -bootstrap-expect={{NODE_COUNT}} -node "consul-$POD_INSTANCE_INDEX-node.$FRAMEWORK_HOST" -data-dir=$MESOS_SANDBOX/consul-data -ui"
          for i in {1..{{NODE_COUNT}}}
          do
            if [ $POD_INSTANCE_INDEX != $(( $i - 1 )) ]; then
              ARGS="$ARGS -retry-join consul-$(( $i - 1 ))-node.$FRAMEWORK_HOST"
            fi
          done

          exec $MESOS_SANDBOX/consul $ARGS
        configs:
          consul:
            template: consul.json.mustache
            dest: consul.json
        cpus: {{NODE_CPUS}}
        memory: {{NODE_MEM}}
        volume:
          path: "consul-data"
          type: {{NODE_DISK_TYPE}}
          size: {{NODE_DISK}}
        {{#TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}
        transport-encryption:
          - name: node
            type: TLS
        {{/TASKCFG_ALL_SECURITY_TRANSPORT_ENCRYPTION_ENABLED}}

plans:
  deploy:
    strategy: serial
    phases:
      agents:
        strategy: {{DEPLOY_STRATEGY}}
        pod: consul
  update:
    strategy: serial
    phases:
      agents:
        strategy: {{UPDATE_STRATEGY}}
        pod: consul
